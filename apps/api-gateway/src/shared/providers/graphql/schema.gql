# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthorModel {
  createdAt: String!
  id: ID!
  name: String!
  updatedAt: String!
}

input AuthorQueryInput {
  orderBy: String
  orderDirection: String
  search: String
  skip: Int
  take: Int
}

type AuthorsResponse {
  count: Int!
  items: [AuthorModel!]!
}

type BookModel {
  author: AuthorModel!
  createdAt: String!
  description: String!
  id: ID!
  language: String!
  rating: Float!
  title: String!
  updatedAt: String!
  url: String!
}

input BookQueryInput {
  authors: [String!]
  categories: [String!]
  isFavorite: Boolean
  orderBy: String
  orderDirection: String
  search: String
  skip: Int
  take: Int
}

type BookResponse {
  author: AuthorModel!
  createdAt: String!
  description: String!
  favoriteCategory: FavoriteBookCategory
  id: ID!
  language: String!
  rating: Float!
  title: String!
  updatedAt: String!
  url: String!
}

type BooksResponse {
  count: Int!
  items: [BookResponse!]!
}

input CreateAuthorDto {
  name: String!
}

input CreateBookDto {
  authorId: String!
  description: String!
  language: String!
  title: String!
  url: String!
}

input CreateFavoriteDto {
  category: String!
  entityId: String!
  entityType: String!
  userId: String!
}

input DeleteFavoriteDto {
  entityId: String!
  userId: String!
}

"""The category of favorite items"""
enum FavoriteBookCategory {
  DidNotFinish
  Read
  ReadingNow
  WantToRead
}

type FavoriteModel {
  category: String!
  entityId: String!
  entityType: String!
  userId: String!
}

type Mutation {
  createAuthor(author: CreateAuthorDto!): AuthorModel!
  createBook(book: CreateBookDto!): BookModel!
  createFavorite(favorite: CreateFavoriteDto!): FavoriteModel!
  deleteFavorite(favorite: DeleteFavoriteDto!): Boolean!
  login(email: String!, fingerprint: String!, password: String!): TokensDto!
  logout(fingerprint: String!): Boolean!
  refreshTokens(fingerprint: String!, refreshToken: String!): TokensDto!
  register(email: String!, fingerprint: String!, password: String!): TokensDto!
  updateBook(book: UpdateBookDto!): BookModel!
  updateFavorite(favorite: UpdateFavoriteDto!): FavoriteModel!
}

type Query {
  getAuthorById(id: String!): AuthorModel!
  getAuthors(query: AuthorQueryInput!): AuthorsResponse!
  getBookById(id: String!): BookResponse!
  getBooks(query: BookQueryInput!): BooksResponse!
  getCurrentUser: UserModel!
  getUserByEmail(email: String!): UserModel!
  getUserById(id: String!): UserModel!
}

type TokensDto {
  accessToken: String!
  refreshToken: String!
}

input UpdateBookDto {
  authorId: String!
  description: String!
  id: ID!
  language: String!
  title: String!
  url: String!
}

input UpdateFavoriteDto {
  category: String!
  entityId: String!
  userId: String!
}

type UserModel {
  createdAt: String!
  email: String!
  id: ID!
  password: String!
  updatedAt: String!
}